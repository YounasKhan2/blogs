// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer2/core'
import * as Local from 'contentlayer2/source-files'

export { isType } from 'contentlayer2/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Author = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Author'
  /** The name of the author */
  name: string
  /** Author biography */
  bio: string
  /** Author avatar image path */
  avatar?: string | undefined
  /** Twitter handle */
  twitter?: string | undefined
  /** LinkedIn profile URL */
  linkedin?: string | undefined
  /** Personal website URL */
  website?: string | undefined
  /** Areas of expertise */
  expertise?: string[] | undefined
  /** MDX file body */
  body: MDX
  slug: string
}

export type Category = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Category'
  /** Category display name */
  name: string
  /** Category description */
  description: string
  /** Icon name from Lucide */
  icon?: string | undefined
  /** Category color theme */
  color?: string | undefined
  /** Whether to feature this category */
  featured: boolean
  /** MDX file body */
  body: MDX
  slug: string
  postCount: number
}

export type Post = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Post'
  /** The title of the post */
  title: string
  /** A brief description of the post */
  excerpt: string
  /** The date of the post */
  date: IsoDateTimeString
  /** The author of the post */
  author: string
  /** The category display name */
  category: string
  /** The URL-friendly category slug */
  categorySlug: string
  /** Tags associated with the post */
  tags: string[]
  /** The featured image path */
  image?: string | undefined
  /** Whether the post is featured */
  featured: boolean
  /** Whether the post is published */
  published: boolean
  /** Difficulty level for tutorials */
  difficulty?: 'Beginner' | 'Intermediate' | 'Advanced' | undefined
  /** Estimated time to complete tutorial */
  estimatedTime?: string | undefined
  /** Product rating out of 5 */
  rating?: number | undefined
  /** Pros for review posts */
  pros?: string[] | undefined
  /** Cons for review posts */
  cons?: string[] | undefined
  /** Product specifications */
  specifications?: any | undefined
  /** MDX file body */
  body: MDX
  slug: string
  slugAsParams: string
  readingTime: json
  wordCount: number
}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Author | Category | Post
export type DocumentTypeNames = 'Author' | 'Category' | 'Post'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allPosts: Post[]
  allAuthors: Author[]
  allCategories: Category[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Author: Author
  Category: Category
  Post: Post
}

export type NestedTypeMap = {

}

 